from aiogram.types import Message
from aiogram_dialog import DialogManager, ShowMode
from aiogram_dialog.widgets.input import MessageInput
from aiogram_dialog.widgets.input import ManagedTextInput
import logging

from aio_dialog.states import ShopState
from hanlders.default_handlers import start_command
from database.database import insert_cart

logger = logging.getLogger('bot_app.'+__name__)

async def no_text(message: Message, widget: MessageInput, dialog_manager: DialogManager):
    await message.reply(text='–í—ã –≤–≤–µ–ª–∏ –≤–æ–æ–±—â–µ –Ω–µ —Ç–µ–∫—Å—Ç')

async def count_input_correct(message: Message,
                             widget: ManagedTextInput,
                             dialog_manager: DialogManager,
                             value: int) -> None:
    
    id_product = dialog_manager.dialog_data['id_product']
    name_product = dialog_manager.dialog_data['name_product']
    await insert_cart(user_id=message.from_user.id, id_product=int(id_product), count=int(value))
    await message.answer(text=f'üéâ –í—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–∏–ª–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É —Ç–æ–≤–∞—Ä <b>{name_product}</b> –≤ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ <b>{value}</b> —à—Ç.! üõí\n\n‚ú® –ó–∞–∫–∞–∑–∞—Ç—å –º–æ–∂–µ—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª–µ <b>–ö–æ—Ä–∑–∏–Ω–∞</b>.\n\nüí´ –ò–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –µ—â—ë —Ç–æ–≤–∞—Ä—ã –∏–∑ –Ω–∞—à–µ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –≤–∞—à—É –ø–æ–∫—É–ø–∫—É –µ—â—ë –±–æ–ª–µ–µ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–π!')
    await start_command(message, dialog_manager)


async def count_input_uncorrect(
        message: Message,
        widget: ManagedTextInput,
        dialog_manager: DialogManager,
        error: ValueError):
    await message.reply('–í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ –∏–ª–∏ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ 0')


async def address_input_correct(message: Message,
                               widget: ManagedTextInput,
                               dialog_manager: DialogManager,
                               value: str) -> None:
    dialog_manager.dialog_data['address'] = value
    await dialog_manager.switch_to(ShopState.cart)


async def search_faq(message: Message, widget: ManagedTextInput, dialog_manager: DialogManager, query: str) -> None:
    dialog_manager.dialog_data['search_query'] = query
    dialog_manager.show_mode = ShowMode.DELETE_AND_SEND